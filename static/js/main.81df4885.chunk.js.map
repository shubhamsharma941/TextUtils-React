{"version":3,"sources":["components/Navbar.js","components/TextArea.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","ontoggle","for","TextArea","useState","text","setText","style","color","heading","class","event","target","value","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capatalize","msg","App","setMode","setAlert","message","setTimeout","abouti","body","ReactDom","render"],"mappings":"uJAIe,SAASA,EAAOC,GAC3B,OACA,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACF,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAIA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAzD,sBAUJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACJ,uBAAOD,UAAU,mBAAmBM,QAAWP,EAAMQ,SAAWH,KAAK,WAAWC,GAAG,2BACnF,uBAAOL,UAAU,6BAA6BQ,IAAI,yBAAlD,yC,WCzBa,SAASC,EAASV,GAAQ,IAAD,EACpC,EAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAuCA,OACG,qCACC,oBAAIC,MAAS,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,SAAhD,SAA2DF,EAAMgB,UACjE,sBAAKf,UAAU,OAAf,UACN,uBAAOQ,IAAI,8BAA8BQ,MAAM,aAAaH,MAAS,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,SAAxG,8BACA,6BAAUD,UAAU,eAAeK,GAAG,+BAAtC,mBAAyE,SAAzE,sBAA0FM,GAA1F,0BA9ByB,SAACM,GACpBL,EAAQK,EAAMC,OAAOC,UA6B3B,qBAAgI,KAAhI,sBAA6I,CAACC,gBAA8B,UAAbrB,EAAME,KAAe,QAAQ,UAAWa,MAAmB,SAAbf,EAAME,KAAc,QAAQ,UAAzO,OAED,wBAAQD,UAAU,uBAAuBM,QA5Cf,WACnB,IAAIe,EAAUV,EAAKW,cACnBV,EAAQS,GACRtB,EAAMwB,UAAU,0BAA2B,YAyClD,mCACA,wBAAQvB,UAAU,uBAAuBM,QAvCf,WACnB,IAAIe,EAAUV,EAAKa,cACnBZ,EAAQS,GACRtB,EAAMwB,UAAU,0BAA2B,YAoClD,mCACA,wBAAQvB,UAAU,uBAAuBM,QA7BlB,WAEhBM,EADe,IAEfb,EAAMwB,UAAU,4BAA6B,YA0BpD,wBACA,wBAAQvB,UAAU,uBAAwBM,QAxBpB,WACf,IAAIK,EAAOc,SAASC,eAAe,SACnCf,EAAKgB,SACLC,UAAUC,UAAUC,UAAUnB,EAAKQ,OACnCpB,EAAMwB,UAAU,2BAA4B,YAoBnD,uBACA,wBAAQvB,UAAU,uBAAwBM,QAlBd,WACrB,IAAIe,EAAUV,EAAKoB,MAAM,QACzBnB,EAAQS,EAAQW,KAAK,MACrBjC,EAAMwB,UAAU,oCAAqC,YAe5D,iCAEA,sBAAKvB,UAAU,iBAAiBa,MAAS,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,SAA5E,UACI,mDACA,8BAAIU,EAAKoB,MAAM,KAAKE,OAApB,WAAoCtB,EAAKsB,OAAzC,mBACA,8BAAK,KAAQtB,EAAKoB,MAAM,KAAKE,OAA7B,uBACA,yCACA,4BAAItB,EAAKsB,OAAO,EAAGtB,EAAM,4DC1CfuB,MAhBf,SAAenC,GAOX,OAEKA,EAAMoC,OAAS,sBAAKnB,MAAK,sBAAiBjB,EAAMoC,MAAM/B,KAA7B,gCAAiEgC,KAAK,QAAhF,UACtB,iCARqB,SAACC,GAChB,IAAMC,EAAQD,EAAKb,cACnB,OAAOc,EAAMC,OAAO,GAAGjB,cAAgBgB,EAAME,MAAM,GAMhDC,CAAW1C,EAAMoC,MAAM/B,QADV,KAC4BL,EAAMoC,MAAMO,QCoDjDC,MArDf,WAEI,MAAwBjC,mBAAS,SAAjC,mBAAOT,EAAP,KAAa2C,EAAb,KACA,EAA0BlC,mBAAS,MAAnC,mBAAOyB,EAAP,KAAcU,EAAd,KAEMtB,EAAY,SAACuB,EAAS1C,GACxByC,EAAS,CACLH,IAAKI,EACL1C,KAAMA,IAGV2C,YAAW,WACPF,EAAS,QACV,OAoBP,OACI,qCAEH,cAAC/C,EAAD,CAAQK,MAAO,YAAY6C,OAAO,QAAQ/C,KAAQA,EAAMM,SApBxC,WACD,UAATN,GACC2C,EAAQ,QACRnB,SAASwB,KAAKpC,MAAMO,gBAAkB,UACtCG,EAAU,6BAA8B,WACxCE,SAAStB,MAAQ,0BAIjByC,EAAQ,SACRnB,SAASwB,KAAKpC,MAAMO,gBAAkB,QACtCG,EAAU,8BAA+B,WACzCE,SAAStB,MAAQ,6BASxB,cAAC,EAAD,CAAOgC,MAASA,IAChB,qBAAKnC,UAAU,YAAf,SAMK,cAACS,EAAD,CAAUc,UAAaA,EAAWR,QAAU,kCAAkCd,KAAQA,UClDhGiD,IAASC,OACT,cAAC,EAAD,IAEA1B,SAASC,eAAe,W","file":"static/js/main.81df4885.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a  className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n         {/* <li className=\"nav-item\">\r\n          <Link  className=\"nav-link\" to=\"/about\">{props.abouti}</Link>\r\n        </li>  */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick = {props.ontoggle}  type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label text-dark\" for=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string\r\n}\r\n\r\n// Navbar.defaultProps = {\r\n//     title: \"Set the title here\",\r\n//     about: \"Set the about here\"\r\n// };\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const  handleupclick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\", 'success');\r\n    }\r\n\r\n    const  handleloclick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case\", 'success');\r\n    }\r\n\r\n    const handleonchange = (event)=>{\r\n        setText(event.target.value)\r\n\r\n    }\r\n\r\n    const handleClear = () =>{\r\n        let  newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared successfully\", 'success');\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied successfully\", 'success');\r\n    }\r\n\r\n    const handleExtraSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed successfully\", 'success');\r\n        \r\n    }\r\n\r\n    return (\r\n       <>\r\n        <h1 style = {{color:props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n  <label for=\"exampleFormControlTextarea1\" class=\"form-label\" style = {{color:props.mode==='dark'?'white':'black'}}>Example textarea</label>\r\n  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" id = \"myBox\" value = {text} onChange ={handleonchange} rows=\"8\" style = {{backgroundColor: props.mode==='light'?'white':'#090946', color:props.mode==='dark'?'white':'black'  }} ></textarea>\r\n </div>\r\n <button className=\"btn btn-primary mx-1\" onClick = {handleupclick}>Convert to upper case</button>\r\n <button className=\"btn btn-primary mx-1\" onClick = {handleloclick}>Convert to lower case</button>\r\n <button className=\"btn btn-primary mx-1\" onClick = {handleClear}>Clear Text</button>\r\n <button className=\"btn btn-primary mx-1\"  onClick = {handleCopy}>Copy Text</button>\r\n <button className=\"btn btn-primary mx-1\"  onClick = {handleExtraSpace}>Remove Extra Spaces</button>\r\n \r\n <div className=\"container my-2\" style = {{color:props.mode==='dark'?'white':'black'}}>\r\n     <h2>Your text summary</h2>\r\n     <p>{text.split(\" \").length} words, {text.length} characters, </p>\r\n     <p>{ 0.008 * text.split(\" \").length} minutes to read </p>\r\n     <h2>Preview</h2>\r\n     <p>{text.length>0? text: 'Enter something in the textbox to preview it here'}</p>\r\n </div>\r\n</>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capatalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n       \r\n         props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capatalize(props.alert.type)}</strong>: {props.alert.msg}\r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextArea from \"./components/TextArea\";\r\nimport React, { useState } from 'react'\r\nimport Alert from \"./components/Alert\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route\r\n// } from \"react-router-dom\";\r\n\r\nfunction App(){\r\n\r\n    const [mode, setMode] = useState('light');\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const showAlert = (message, type)=>{\r\n        setAlert({\r\n            msg: message,\r\n            type: type\r\n        })\r\n\r\n        setTimeout(() => {\r\n            setAlert(null)\r\n        }, 1500);\r\n    }\r\n\r\n    const onToggle = ()=>{\r\n        if(mode === 'light'){\r\n            setMode(\"dark\");\r\n            document.body.style.backgroundColor = '#090946';\r\n            showAlert(\"Dark Mode has been enabled\", 'success');\r\n            document.title = \"Text Utils- Dark Mode\";\r\n        }\r\n\r\n        else{\r\n            setMode('light');\r\n            document.body.style.backgroundColor = 'white';\r\n            showAlert(\"Light Mode has been enabled\", 'success');\r\n            document.title = \"Text Utils- Light Mode\";\r\n        }\r\n    };\r\n\r\n\r\n    return(     \r\n        <>\r\n        {/* <Router> */}\r\n     <Navbar title =\"TextUtils\" abouti=\"About\" mode = {mode} ontoggle = {onToggle} />\r\n     <Alert alert = {alert}/>\r\n     <div className=\"container\">\r\n     {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\"> */}\r\n          <TextArea showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode = {mode} />\r\n          {/* </Route> */}\r\n        {/* </Switch> */}\r\n     </div>\r\n     {/* </Router> */}\r\n     </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// creating a new react app\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(\n<App />\n    , \ndocument.getElementById(\"root\"));\n\n"],"sourceRoot":""}